using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class TankShooting : MonoBehaviour
{
    public Rigidbody m_Shell;
    public Transform m_FireTransform, m_FireTransform1;
    public Slider m_AimSlider, m_AimSlider2;
    public AudioSource m_ShootingAudio;
    public AudioClip m_ChargingClip, m_FireClip;
    public float m_MinLaunchForce = 15f, m_MaxLaunchForce = 30f, m_MaxChargeTime = 0.75f;
    public int shot_count = 0;
    public Text t;


    private float m_CurrentLaunchForce, m_ChargeSpeed;
    private bool m_Fired;

    private void OnEnable()
    {
        m_CurrentLaunchForce = m_MaxLaunchForce;
        m_AimSlider.value = m_MinLaunchForce;
    }

    private void Start()
    {
        m_ChargeSpeed = (m_MaxLaunchForce - m_MinLaunchForce)/m_MaxChargeTime;
        t.text = shot_count.ToString();
    }

    private void Update()
    {
        if(shot_count > 0)
        {
            m_AimSlider.value = m_MinLaunchForce;
            if (Input.GetButtonDown("Fire1"))
            {
                m_Fired = false;
                m_AimSlider.gameObject.SetActive(true);
                m_CurrentLaunchForce = m_MinLaunchForce;
                m_ShootingAudio.clip = m_ChargingClip;
                m_ShootingAudio.Play();
            }
            else if (Input.GetButton("Fire1") && !m_Fired)
            {
                m_CurrentLaunchForce += m_ChargeSpeed * Time.deltaTime;
                m_AimSlider.value = m_CurrentLaunchForce - 10f;
            }
            else if (Input.GetButtonUp("Fire1") && !m_Fired)
            {
                m_AimSlider.gameObject.SetActive(false);
                Fire();
            }
            else if (Input.GetButtonDown("Fire2"))
            {
                m_Fired = false;
                m_AimSlider2.gameObject.SetActive(true);
                m_CurrentLaunchForce = m_MinLaunchForce;
                m_ShootingAudio.clip = m_ChargingClip;
                m_ShootingAudio.Play();
            }
            else if (Input.GetButton("Fire2") && !m_Fired)
            {
                m_CurrentLaunchForce += m_ChargeSpeed * Time.deltaTime;
                m_AimSlider2.value = m_CurrentLaunchForce - 10f;
            }
            else if (Input.GetButtonUp("Fire2") && !m_Fired)
            {
                m_AimSlider2.gameObject.SetActive(false);
                Fire2();
            }
            t.text = shot_count.ToString();
        } 
    }

    private void Fire()
    {
        m_Fired = true;
        Rigidbody shellInstance = Instantiate(m_Shell, m_FireTransform.position, m_FireTransform.rotation) as Rigidbody;
        shellInstance.velocity = m_CurrentLaunchForce * m_FireTransform.forward;

        m_ShootingAudio.clip = m_FireClip;
        m_ShootingAudio.Play();
        m_CurrentLaunchForce = m_MinLaunchForce;
        shot_count--;
    }
    private void Fire2()
    {
        m_Fired = true;
        Rigidbody shellInstance = Instantiate(m_Shell, m_FireTransform1.position, m_FireTransform1.rotation) as Rigidbody;
        shellInstance.velocity = m_CurrentLaunchForce * -m_FireTransform1.forward;

        m_ShootingAudio.clip = m_FireClip;
        m_ShootingAudio.Play();
        m_CurrentLaunchForce = m_MinLaunchForce;
        shot_count--;
    }
}
